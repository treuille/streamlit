/**
 * Copyright 2018-2019 Streamlit Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/

syntax = "proto3";

import "streamlit/proto/Delta.proto";
import "streamlit/proto/Initialize.proto";
import "streamlit/proto/NewReport.proto";
import "streamlit/proto/SessionEvent.proto";
import "streamlit/proto/SessionState.proto";
import "streamlit/proto/BlockPath.proto";

// A message sent from Proxy to the browser
message ForwardMsg {
  // Contains 'non-payload' ForwardMsg data that isn't cached for the purposes
  // of ForwardMsg de-duping.
  ForwardMsgMetadata metadata = 1;

  oneof type {
    // Report lifecycle messages.

    Initialize initialize = 2;
    NewReport new_report = 3;
    Delta delta = 4;
    bool report_finished = 5;

    // Upload progress messages.

    // Indicates the % progress of a report upload.
    uint32 upload_report_progress = 6;

    // Indicates that the upload is complete and gives the URL.
    string report_uploaded = 7;

    // State change and event messages.

    // ReportSession state changed. This is the new state.
    SessionState session_state_changed = 8;

    // A SessionEvent was emitted.
    SessionEvent session_event = 9;
  }
}

message ForwardMsgMetadata {
  // Each delta applies to a particular ID. Only set for Delta messages.
  uint32 delta_id = 1;

  // Path to parent block. Only set for Delta messages.
  BlockPath parent_block = 2;

  ElementDimensionSpec element_dimension_spec = 3;
}

// Specifies the dimensions for the element
message ElementDimensionSpec {
  // width in CSS points
  uint32 width = 1;

  // height in CSS points
  uint32 height = 2;
}
